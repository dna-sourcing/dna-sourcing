<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<configuration>-->

	<!--&lt;!&ndash; ============== inject =================== &ndash;&gt;-->

	<!--&lt;!&ndash; &ndash;&gt;-->
	<!--<springProperty scope="context" name="LCD" source="log.custom.dir"-->
	                <!--defaultValue=""/>-->

	<!--&lt;!&ndash; &ndash;&gt;-->
	<!--&lt;!&ndash; <springProperty scope="context" name="LCCL" source="log.custom.console.level" defaultValue="DEBUG"/>&ndash;&gt;-->
	<!--<springProperty scope="context" name="LCRL" source="log.custom.root.level" defaultValue="DEBUG"/>-->

	<!--&lt;!&ndash; &ndash;&gt;-->
	<!--<springProperty scope="context" name="MAX_FILE_SIZE" source="log.custom.max_file_size" defaultValue="50MB"/>-->

	<!--&lt;!&ndash; &ndash;&gt;-->
	<!--<springProperty scope="context" name="MAX_HISTORY" source="log.custom.max_history" defaultValue="10"/>-->


	<!--&lt;!&ndash; ==============  =================== &ndash;&gt;-->

	<!--&lt;!&ndash; 日志文件编码&ndash;&gt;-->
	<!--<property name="LOG_CHARSET" value="UTF-8"/>-->

	<!--&lt;!&ndash; 日志文件路径+日期&ndash;&gt;-->
	<!--<property name="LOG_SUB_DIR" value="${LCD}/%d{yyyyMMdd}"/>-->

	<!--&lt;!&ndash; &ndash;&gt;-->
	<!--<property name="LOG_MSG_PATTERN"-->
	          <!--value="- | [%d{yyyyMMdd HH:mm:ss.SSS}] | [%level] | [${HOSTNAME}] | [%thread] | [%logger{36}] | &ndash;&gt; %msg|%n "/>-->


	<!--&lt;!&ndash; ==============  =================== &ndash;&gt;-->

	<!--&lt;!&ndash;输出到控制台&ndash;&gt;-->
	<!--<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
		<!--&lt;!&ndash; 输出的日志内容格式化&ndash;&gt;-->
		<!--<layout class="ch.qos.logback.classic.PatternLayout">-->
			<!--<pattern>${LOG_MSG_PATTERN}</pattern>-->
		<!--</layout>-->
	<!--</appender>-->

	<!--&lt;!&ndash;输出到文件&ndash;&gt;-->
	<!--<appender name="FILE_ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
		<!--&lt;!&ndash;日志文件路径，日志文件名称&ndash;&gt;-->
		<!--<File>${LCD}/all.log</File>-->

		<!--&lt;!&ndash; 设置滚动策略，当天的日志大小超过 ${MAX_FILE_SIZE} 文件大小时候，新的内容写入新的文件 &ndash;&gt;-->
		<!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->

			<!--&lt;!&ndash;日志文件路径，新的 ALL 日志文件名称，i 是个变量 &ndash;&gt;-->
			<!--<FileNamePattern>${LOG_SUB_DIR}/all%i.log</FileNamePattern>-->

			<!--&lt;!&ndash; 配置日志的滚动时间 ，表示只保留最近 n 天的日志 &ndash;&gt;-->
			<!--<MaxHistory>${MAX_HISTORY}</MaxHistory>-->

			<!--&lt;!&ndash;当天的日志大小超过 ${MAX_FILE_SIZE} 文件大小时候，新的内容写入新的文件&ndash;&gt;-->
			<!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
				<!--<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>-->
			<!--</timeBasedFileNamingAndTriggeringPolicy>-->

		<!--</rollingPolicy>-->

		<!--&lt;!&ndash; 输出的日志内容格式化&ndash;&gt;-->
		<!--<layout class="ch.qos.logback.classic.PatternLayout">-->
			<!--<pattern>${LOG_MSG_PATTERN}</pattern>-->
		<!--</layout>-->

	<!--</appender>-->

	<!--&lt;!&ndash;输出到文件，ERROR&ndash;&gt;-->
	<!--<appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->

		<!--&lt;!&ndash; 下面为配置只输出error级别的日志 &ndash;&gt;-->
		<!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
			<!--<level>ERROR</level>-->
			<!--<OnMismatch>DENY</OnMismatch>-->
			<!--<OnMatch>ACCEPT</OnMatch>-->
		<!--</filter>-->

		<!--&lt;!&ndash;日志文件路径，日志文件名称&ndash;&gt;-->
		<!--<File>${LCD}/err.log</File>-->

		<!--&lt;!&ndash; 设置滚动策略，当天的日志大小超过 ${MAX_FILE_SIZE} 文件大小时候，新的内容写入新的文件 &ndash;&gt;-->
		<!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->

			<!--&lt;!&ndash;日志文件路径，新的 ERR 日志文件名称，i 是个变量 &ndash;&gt;-->
			<!--<FileNamePattern>${LOG_SUB_DIR}/err%i.log</FileNamePattern>-->

			<!--&lt;!&ndash; 配置日志的滚动时间 ，表示只保留最近 n 天的日志 &ndash;&gt;-->
			<!--<MaxHistory>${MAX_HISTORY}</MaxHistory>-->

			<!--&lt;!&ndash;当天的日志大小超过 ${MAX_FILE_SIZE} 文件大小时候，新的内容写入新的文件&ndash;&gt;-->
			<!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
				<!--<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>-->
			<!--</timeBasedFileNamingAndTriggeringPolicy>-->
		<!--</rollingPolicy>-->

		<!--&lt;!&ndash; 输出的日志内容格式化&ndash;&gt;-->
		<!--<layout class="ch.qos.logback.classic.PatternLayout">-->
			<!--<Pattern>${LOG_MSG_PATTERN}</Pattern>-->
		<!--</layout>-->

	<!--</appender>-->

	<!--&lt;!&ndash;  &ndash;&gt;-->
	<!--<appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">-->
		<!--<appender-ref ref="CONSOLE"/>-->
	<!--</appender>-->

	<!--<appender name="ASYNC_FILE_ALL" class="ch.qos.logback.classic.AsyncAppender">-->
		<!--<appender-ref ref="FILE_ALL"/>-->
	<!--</appender>-->

	<!--<appender name="ASYNC_FILE_ERROR" class="ch.qos.logback.classic.AsyncAppender">-->
		<!--<appender-ref ref="FILE_ERROR"/>-->
	<!--</appender>-->


	<!--&lt;!&ndash; ==============  =================== &ndash;&gt;-->

	<!--&lt;!&ndash; 设置某一个包或者具体的某一个类的日志 &ndash;&gt;-->
	<!--&lt;!&ndash; additivity 设为false，则logger内容不附加至root &ndash;&gt;-->
	<!--<logger name="org.apache.kafka" level="WARN" additivity="false">-->

		<!--&lt;!&ndash; additivity 设为 false，则表示不附加到 root，只会附加到这里的appender &ndash;&gt;-->
		<!--&lt;!&ndash; 这样就保证 level="WARN" &ndash;&gt;-->
		<!--&lt;!&ndash;  &ndash;&gt;-->
		<!--<appender-ref ref="ASYNC_CONSOLE"/>-->

		<!--&lt;!&ndash;  &ndash;&gt;-->
		<!--<appender-ref ref="ASYNC_FILE_ALL"/>-->

		<!--&lt;!&ndash;  &ndash;&gt;-->
		<!--<appender-ref ref="ASYNC_FILE_ERROR"/>-->

	<!--</logger>-->

	<!--&lt;!&ndash; 貌似不支持通配符 &ndash;&gt;-->
	<!--&lt;!&ndash; <logger name="*" level="${LCCL}" additivity="false">&ndash;&gt;-->
	<!--&lt;!&ndash; 	<appender-ref ref="ASYNC_CONSOLE"/>&ndash;&gt;-->
	<!--&lt;!&ndash; </logger>&ndash;&gt;-->

	<!--&lt;!&ndash; ==============  =================== &ndash;&gt;-->

	<!--&lt;!&ndash; &ndash;&gt;-->
	<!--<root level="${LCRL}">-->

		<!--&lt;!&ndash;  &ndash;&gt;-->
		<!--<appender-ref ref="ASYNC_CONSOLE"/>-->

		<!--&lt;!&ndash;  &ndash;&gt;-->
		<!--<appender-ref ref="ASYNC_FILE_ALL"/>-->

		<!--&lt;!&ndash;  &ndash;&gt;-->
		<!--<appender-ref ref="ASYNC_FILE_ERROR"/>-->
	<!--</root>-->

<!--</configuration>-->